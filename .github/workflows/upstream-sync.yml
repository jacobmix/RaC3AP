name: Sync Fork with Upstream

on:
  schedule:
    - cron: '0 */8 * * *'    # Every 8 hours
  workflow_dispatch:         # Allow manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/Taoshix/RaC3AP.git
          git fetch upstream

      - name: Fetch all branches from origin
        run: |
          git fetch origin
          git branch -r

      - name: Merge upstream changes into main and staging
        id: sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          updated_branches=()
          for branch in main staging; do
            echo "🔄 Syncing branch: $branch"

            # Checkout or create local tracking branch
            if git show-ref --verify --quiet refs/heads/$branch; then
              git checkout $branch
            elif git show-ref --verify --quiet refs/remotes/origin/$branch; then
              git checkout -b $branch origin/$branch
            else
              echo "⚠️ No local or remote branch '$branch' — skipping."
              continue
            fi

            before_commit=$(git rev-parse HEAD)

            # Merge upstream branch if exists
            if git show-ref --verify --quiet refs/remotes/upstream/$branch; then
              git merge upstream/$branch --no-edit || true
              after_commit=$(git rev-parse HEAD)
              if [ "$before_commit" != "$after_commit" ]; then
                echo "✅ Pushing updated $branch"
                git push origin $branch
                updated_branches+=("$branch")
              else
                echo "ℹ️ No new commits for $branch"
              fi
            else
              echo "⚠️ Upstream branch '$branch' missing — skipping."
            fi
          done

          if [ ${#updated_branches[@]} -gt 0 ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
            echo "updated_branches=${updated_branches[*]}" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Trigger build workflows in order (main first)
        if: env.changes_detected == 'true'
        run: |
          branches=(${{ env.updated_branches }})
          for branch in main staging; do
            if [[ " ${branches[@]} " =~ " ${branch} " ]]; then
              echo "🚀 Triggering build workflow for ${branch}"
              curl -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                https://api.github.com/repos/${{ github.repository }}/dispatches \
                -d "{\"event_type\": \"trigger-build-apworld\", \"client_payload\": {\"branch\": \"${branch}\"}}"
              sleep 5
            fi
          done
